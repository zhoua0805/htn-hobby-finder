{"version":3,"sources":["utils/History.js","assets/logo.svg","components/navbar.js","assets/cat.png","assets/cat2.jpg","assets/cat3.jpg","components/pose-estimator.js","containers/imagePage.js","assets/man.png","containers/videoPage.js","App.js","reportWebVitals.js","index.js"],"names":["createBrowserHistory","NavbarComponent","props","imageSelect","videoSelect","CommunitiesSelect","this","page","Navbar","expand","fixed","Brand","style","position","to","src","navbarIcon","className","alt","display","float","top","right","Toggle","aria-controls","Collapse","id","NavItem","Component","posenet","require","dotProduct","vec1","vec2","sum","i","length","magnitude","vec","dpt","Math","sqrt","L2Distance","percentError","error","abs","imageElement1","imageElement2","a","load","then","net","estimateSinglePose","flipHorizontal","pose1","positions1","keypoints","part","push","filter","e","undefined","map","pro","pose2","positions2","user","result","final","getSimilarity","BODYPARTS","Image","onChangeOne","imageList","addUpdateIndex","console","log","setState","myImage","onChangeTwo","targetImage","state","pose","bind","onChangeRunButton","estimatePoseMatch","myImageRef","React","createRef","targetImageRef","window","scrollTo","myImageElement","current","targetImageElement","message","best","worst","img","Icon3","Icon2","Icon1","indexOfMaxValue","reduce","iMax","x","arr","indexOfMinValue","iMin","floor","imageElement","multiple","value","onChange","dataURLKey","onImageUpload","onImageRemove","isDragging","dragProps","class","type","color","onClick","image","index","width","ref","Video","estimatePoseOnImage","IMG","Icon","App","history","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4126324c.chunk.js","sourcesContent":["// src/history.js\r\n\r\nimport { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","export default __webpack_public_path__ + \"static/media/logo.999173d2.svg\";","import React, {Component} from 'react';\nimport '../css/navbar.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Navbar, NavItem,Dropdown, DropdownButton} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport navbarIcon from '../assets/logo.svg';\n// import Axios from 'axios';\n\nclass NavbarComponent extends Component {\n\n  constructor(props){\n    super(props);\n  }\n\n  async componentWillMount(){\n  }\n\n  render() {\n    let imageSelect = \"navbarLink\", \n        videoSelect = \"navbarLink\", \n        CommunitiesSelect = \"navbarLink\";\n\n    switch (this.props.page) {\n      case \"image\": imageSelect += \" navbarSelected\"; break;\n      case \"video\": videoSelect += \" navbarSelected\"; break;\n      case \"communities\": CommunitiesSelect += \" navbarSelected\"; break;\n      default: break;\n    }\n\n    return (\n    <Navbar expand=\"md\" fixed=\"top\" >\n      <Navbar.Brand style={{position: 'absolute'}} >\n        <Link to=\"/\"> \n          <img src={navbarIcon} className=\"d-inline-block align-top navbarIcon\" alt=\"Frosh Week Icon\"/> \n        </Link>\n      </Navbar.Brand>\n      <div className=\"sticky-top\" style={{position: 'absolute', display: 'inline-block', float: 'right', top: '2.7px',right:'0vw'}}>\n        <Navbar.Toggle aria-controls=\"navbar-id\" className=\"sticky-top\"/>\n      </div>\n      <div className = \"navbarTitle\">\n        SUPERPOSE\n      </div>\n      <Navbar.Collapse id=\"navbar-id\" className=\"justify-content-center\">\n\n        <div className={imageSelect} ><NavItem><Link to=\"/\">Image</Link></NavItem></div>\n        <div className={videoSelect}><NavItem><Link to=\"/video\">Video</Link></NavItem></div>\n        <div className={CommunitiesSelect}><NavItem><Link to=\"/contact\">Communities</Link></NavItem></div>\n      </Navbar.Collapse>     \n    </Navbar>\n\n    )\n  }\n}\n\n\nexport default NavbarComponent;\n","export default __webpack_public_path__ + \"static/media/cat.86c53b1d.png\";","export default __webpack_public_path__ + \"static/media/cat2.4b8c61b9.jpg\";","export default __webpack_public_path__ + \"static/media/cat3.6929308e.jpg\";","import React from 'react'\r\nconst posenet = require('@tensorflow-models/posenet')\r\n\r\nvar flipHorizontal = false;\r\n\r\nfunction dotProduct(vec1, vec2) {\r\n    let sum = 0;\r\n    for (let i = 0; i < vec1.length; i++){\r\n        sum += vec1[i] * vec2[i]\r\n    };\r\n    return sum;\r\n}\r\n\r\nfunction magnitude(vec) {\r\n    let dpt = dotProduct(vec, vec);\r\n    return Math.sqrt(dpt);\r\n}\r\n\r\nfunction L2Distance(vec1, vec2) {\r\n    let dpt = dotProduct(vec1, vec2);\r\n    return Math.sqrt(2*(1-dpt));\r\n}\r\n\r\nfunction percentError(vec1, vec2) {\r\n    let error = [];\r\n    for (let i = 0; i < vec1.length; i++){\r\n        error[i] = Math.abs((vec1[i] - vec2[i])/vec1[i]);\r\n    };\r\n    return error\r\n}\r\n\r\nasync function getSimilarity(imageElement1, imageElement2) {\r\n    let pro = await posenet.load().then(function(net) {\r\n        const pose1 = net.estimateSinglePose(imageElement1, {\r\n            flipHorizontal: true\r\n        });\r\n        return pose1;\r\n    }).then(function(pose1){\r\n        let positions1 = [];\r\n        for (let keypoints in pose1){\r\n            for (let part in pose1[keypoints]){\r\n                for (let position in pose1[keypoints][part]){\r\n                    positions1.push(pose1[keypoints][part][position]['x']);\r\n                    positions1.push(pose1[keypoints][part][position]['y']);\r\n                }\r\n            }\r\n        };\r\n        positions1 = positions1.filter(function(e) {\r\n            return e !== undefined;\r\n        });\r\n        positions1 = positions1.map(i => i / magnitude(positions1))\r\n        return positions1\r\n    });\r\n\r\n    let user = await posenet.load().then(function(net) {\r\n        const pose2 = net.estimateSinglePose(imageElement2, {\r\n            flipHorizontal: true\r\n        });\r\n        return pose2;\r\n    }).then(function(pose2){\r\n        let positions2 = [];\r\n        for (let keypoints in pose2){\r\n            for (let part in pose2[keypoints]){\r\n                for (let position in pose2[keypoints][part]){\r\n                    positions2.push(pose2[keypoints][part][position]['x']);\r\n                    positions2.push(pose2[keypoints][part][position]['y']);\r\n                }\r\n            }\r\n        };\r\n        positions2 = positions2.filter(function(e) {\r\n            return e !== undefined;\r\n        });\r\n        positions2 = positions2.map(i => i / magnitude(positions2))\r\n        return positions2;\r\n    });\r\n    const result = L2Distance(pro, user);\r\n    const error = percentError(pro, user);\r\n\r\n    const final = {result: result, error: error};\r\n\r\n    return final\r\n}\r\n\r\nexport default getSimilarity;","import React, { Component } from 'react';\r\nimport NavbarComponent from '../components/navbar';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Container, Col, Row } from 'react-grid-system';\r\nimport '../css/start.css';\r\nimport Icon1 from \"../assets/cat.png\";\r\nimport Icon2 from \"../assets/cat2.jpg\";\r\nimport Icon3 from \"../assets/cat3.jpg\";\r\nimport ImageUploading from 'react-images-uploading';\r\nimport getSimilarity from '../components/pose-estimator';\r\n\r\n\r\nconst posenet = require('@tensorflow-models/posenet');\r\n\r\nconst BODYPARTS = [\"nose\",\"leftEye\", \"rightEye\", \"leftEar\", \"rightEar\", \"leftShoulder\", \"rightShoulder\", \"leftElbow\", \"rightElbow\", \"leftWrist\", \"rightWrist\", \"leftHip\", \"rightHip\",\t\"leftKnee\",\t\"rightKnee\",\t\"leftAnkle\",\"rightAnkle\",]\r\n\r\nexport default class Image extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { myImage: [],\r\n                  targetImage: [], \r\n                  pose: undefined};\r\n    this.onChangeOne = this.onChangeOne.bind(this);\r\n    this.onChangeTwo = this.onChangeTwo.bind(this);\r\n    this.onChangeRunButton = this.onChangeRunButton.bind(this);\r\n    this.estimatePoseMatch = this.estimatePoseMatch.bind(this);\r\n    this.myImageRef = React.createRef();\r\n    this.targetImageRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount(){\r\n    window.scrollTo(0,0);\r\n  }\r\n\r\n  onChangeOne = (imageList, addUpdateIndex) => {\r\n    // data for submit\r\n    console.log(imageList, addUpdateIndex);\r\n    this.setState({myImage: imageList});\r\n  }\r\n\r\n  onChangeTwo = (imageList, addUpdateIndex) => {\r\n    // data for submit\r\n    console.log(imageList, addUpdateIndex);\r\n    this.setState({targetImage: imageList});\r\n  }\r\n\r\n  async onChangeRunButton() {\r\n    var myImageElement = this.myImageRef.current;\r\n    var targetImageElement = this.targetImageRef.current;\r\n    var pose = await getSimilarity(myImageElement, targetImageElement);\r\n    console.log(pose);\r\n    const result = {message: \"\", best: \"\", worst: \"\", img: \"\"}\r\n    if (pose.result >0.1){\r\n      result.message = \"Needs More Work!\"\r\n      result.img = Icon3;\r\n    }else if (pose.result > 0.05){\r\n      result.message = \"Almost there!\"\r\n      result.img = Icon2;\r\n    }else{\r\n      result.message = \"Excellent!\"\r\n      result.img = Icon1;\r\n    }\r\n\r\n    var indexOfMaxValue = pose.error.reduce((iMax, x, i, arr) => x > arr[iMax] ? i : iMax, 0);\r\n    var indexOfMinValue = pose.error.reduce((iMin, x, i, arr) => x > arr[iMin] ? iMin : i, 0);\r\n\r\n    console.log(indexOfMaxValue);\r\n    result.best = BODYPARTS[Math.floor(indexOfMaxValue / 2)];\r\n    result.worst = BODYPARTS[Math.floor(indexOfMinValue/ 2)];\r\n    this.setState({pose: result});\r\n  }\r\n\r\n  async estimatePoseMatch(imageElement) {\r\n    // load the posenet model from a checkpoint\r\n    const net = await posenet.load();\r\n    const pose = await net.estimateSinglePose(imageElement, {\r\n      flipHorizontal: false\r\n    });\r\n    return pose;\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <div>\r\n        <NavbarComponent page=\"image\"/>\r\n        <Container className=\"start\">\r\n          <Row>\r\n            <Col  className = \"column\"> Please upload your personal image here\r\n            <ImageUploading\r\n              multiple={false}\r\n              value={this.state.myImage}\r\n              onChange={this.onChangeOne}\r\n              dataURLKey=\"data_url\">\r\n            {({imageList, onImageUpload, onImageRemove, isDragging,dragProps,}) => (\r\n            <div className=\"upload__image-wrapper\" >\r\n            <button class=\"btn btn-primary mybutton\" type=\"button\" style={isDragging ? { color: 'red' } : undefined} onClick={onImageUpload} {...dragProps}>\r\n              Click or Drop here\r\n            </button>\r\n            <br/>\r\n            {imageList.map((image, index) => (\r\n              <div key={index} className=\"image-item\">\r\n                <img src={image['data_url']} alt=\"\" width=\"200\" ref={this.myImageRef} />\r\n                <div className=\"image-item__btn-wrapper\">\r\n                  <button class=\"btn btn-primary removeButton\" type=\"button\" onClick={() => onImageRemove(index)}>Remove</button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </ImageUploading>\r\n            </Col>\r\n\r\n\r\n\r\n            <Col  className = \"column\"> Please upload the pro (target) image here\r\n            <ImageUploading\r\n              multiple={false}\r\n              value={this.state.targetImage}\r\n              onChange={this.onChangeTwo}\r\n              dataURLKey=\"data_url\">\r\n            {({imageList, onImageUpload, onImageRemove, isDragging,dragProps,}) => (\r\n            <div className=\"upload__image-wrapper\">\r\n            <button class=\"btn btn-primary mybutton\" type=\"button\" style={isDragging ? { color: 'red' } : undefined} onClick={onImageUpload} {...dragProps}>\r\n              Click or Drop here\r\n            </button>\r\n            <br/>\r\n            {imageList.map((image, index) => (\r\n              <div key={index} className=\"image-item\">\r\n                <img src={image['data_url']} alt=\"\" width=\"200\" ref={this.targetImageRef} />\r\n                <div className=\"image-item__btn-wrapper\">\r\n                  <button class=\"btn btn-primary removeButton\" type=\"button\" onClick={() => onImageRemove(index)}>Remove</button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </ImageUploading>\r\n            </Col>\r\n          </Row>\r\n\r\n          <button type=\"button\" class=\"btn btn-primary btn-lg\" onClick={() => this.onChangeRunButton()}>Compare</button>\r\n        </Container>\r\n        {this.state.pose? <div className = \"results\"> <Row>\r\n          <Col>\r\n          <img src={this.state.pose.img}  width=\"400\"/>\r\n          </Col>\r\n          <Col>\r\n          <h1>{this.state.pose.message} </h1>\r\n          <h3>Your did great on: {this.state.pose.best}</h3>\r\n          <h3>Your should improve on: {this.state.pose.worst}</h3>\r\n          </Col>\r\n        </Row>\r\n        </div> :undefined}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/man.16bb15ec.png\";","import React, { Component } from 'react';\r\nimport NavbarComponent from '../components/navbar';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Col, Row } from 'react-grid-system';\r\nimport '../css/start.css';\r\nimport Icon from \"../assets/man.png\";\r\n\r\nconst posenet = require('@tensorflow-models/posenet');\r\n\r\n\r\n\r\nexport default class Video extends Component {\r\n  componentDidMount(){\r\n    window.scrollTo(0,0);\r\n    console.log('Image element: ');\r\n    const imageElement = this.IMG.current;\r\n    console.log(imageElement);\r\n    const pose = this.estimatePoseOnImage(imageElement);\r\n    console.log(pose);\r\n  }\r\n    \r\n  constructor(props) {\r\n    super(props);\r\n    this.estimatePoseOnImage = this.estimatePoseOnImage.bind(this);\r\n    this.IMG = React.createRef();\r\n  }\r\n\r\n  async estimatePoseOnImage(imageElement) {\r\n    // load the posenet model from a checkpoint\r\n    const net = await posenet.load();\r\n    const pose = await net.estimateSinglePose(imageElement, {\r\n      flipHorizontal: false\r\n    });\r\n    return pose;\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <div>\r\n        <NavbarComponent page=\"video\"/>\r\n        <img src={Icon} id='the-img' ref={this.IMG}/>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter,\n  Switch,\n  Route} from 'react-router-dom';\nimport history from './utils/History';\nimport Image from './containers/imagePage';\nimport Video from './containers/videoPage';\n\n\nclass App extends Component {\n  render() { \n    return (\n      <BrowserRouter history={history}>\n          <div className=\"container\">\n            <Switch>\n              <Route path=\"/\" exact component={Image}/>\n              <Route path=\"/video\" exact component={Video}/>\n            </Switch>\n          </div>\n          {/* <Footer/> */}\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}