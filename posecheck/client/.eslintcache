[{"C:\\Users\\alice\\htn-hobby-finder\\posecheck\\client\\src\\index.js":"1","C:\\Users\\alice\\htn-hobby-finder\\posecheck\\client\\src\\App.js":"2","C:\\Users\\alice\\htn-hobby-finder\\posecheck\\client\\src\\reportWebVitals.js":"3","C:\\Users\\alice\\htn-hobby-finder\\posecheck\\client\\src\\utils\\History.js":"4","C:\\Users\\alice\\htn-hobby-finder\\posecheck\\client\\src\\containers\\imagePage.js":"5","C:\\Users\\alice\\htn-hobby-finder\\posecheck\\client\\src\\containers\\videoPage.js":"6","C:\\Users\\alice\\htn-hobby-finder\\posecheck\\client\\src\\components\\navbar.js":"7","C:\\Users\\alice\\htn-hobby-finder\\posecheck\\client\\src\\components\\pose-estimator.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":657,"mtime":1610848059758,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":110,"mtime":1610828213513,"results":"13","hashOfConfig":"10"},{"size":4558,"mtime":1610863279284,"results":"14","hashOfConfig":"10"},{"size":1199,"mtime":1610848697684,"results":"15","hashOfConfig":"10"},{"size":1826,"mtime":1610865281256,"results":"16","hashOfConfig":"10"},{"size":2504,"mtime":1610865045228,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"18wh3od",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\alice\\htn-hobby-finder\\posecheck\\client\\src\\index.js",[],["37","38"],"C:\\Users\\alice\\htn-hobby-finder\\posecheck\\client\\src\\App.js",[],"C:\\Users\\alice\\htn-hobby-finder\\posecheck\\client\\src\\reportWebVitals.js",[],"C:\\Users\\alice\\htn-hobby-finder\\posecheck\\client\\src\\utils\\History.js",[],"C:\\Users\\alice\\htn-hobby-finder\\posecheck\\client\\src\\containers\\imagePage.js",["39","40"],"import React, { Component } from 'react';\r\nimport NavbarComponent from '../components/navbar';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Container, Col, Row } from 'react-grid-system';\r\nimport '../css/start.css';\r\nimport Icon from \"../assets/man.png\";\r\nimport ImageUploading from 'react-images-uploading';\r\nimport getSimilarity from '../components/pose-estimator';\r\n\r\n\r\nconst posenet = require('@tensorflow-models/posenet');\r\n\r\n\r\n\r\nexport default class Image extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { myImage: [],\r\n                  targetImage: [] };\r\n    this.onChangeOne = this.onChangeOne.bind(this);\r\n    this.onChangeTwo = this.onChangeTwo.bind(this);\r\n    this.onChangeRunButton = this.onChangeRunButton.bind(this);\r\n    this.estimatePoseMatch = this.estimatePoseMatch.bind(this);\r\n    this.myImageRef = React.createRef();\r\n    this.targetImageRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount(){\r\n    window.scrollTo(0,0);\r\n  }\r\n\r\n  onChangeOne = (imageList, addUpdateIndex) => {\r\n    // data for submit\r\n    console.log(imageList, addUpdateIndex);\r\n    this.setState({myImage: imageList});\r\n  }\r\n\r\n  onChangeTwo = (imageList, addUpdateIndex) => {\r\n    // data for submit\r\n    console.log(imageList, addUpdateIndex);\r\n    this.setState({targetImage: imageList});\r\n  }\r\n\r\n  onChangeRunButton() {\r\n    var myImageElement = this.myImageRef.current;\r\n    var targetImageElement = this.targetImageRef.current;\r\n    getSimilarity(myImageElement, targetImageElement);\r\n    // const pose = this.estimatePoseMatch(myImageElement);\r\n    // console.log(pose);\r\n  }\r\n\r\n  async estimatePoseMatch(imageElement) {\r\n    // load the posenet model from a checkpoint\r\n    const net = await posenet.load();\r\n    const pose = await net.estimateSinglePose(imageElement, {\r\n      flipHorizontal: false\r\n    });\r\n    return pose;\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <div>\r\n        <NavbarComponent page=\"image\"/>\r\n        <Container className=\"start\">\r\n          <Row>\r\n            <Col  className = \"column\"> Please upload your personal image here\r\n            <ImageUploading\r\n              multiple={false}\r\n              value={this.state.myImage}\r\n              onChange={this.onChangeOne}\r\n              dataURLKey=\"data_url\">\r\n            {({imageList, onImageUpload, onImageRemove, isDragging,dragProps,}) => (\r\n            <div className=\"upload__image-wrapper\" >\r\n            <button class=\"btn btn-primary mybutton\" type=\"button\" style={isDragging ? { color: 'red' } : undefined} onClick={onImageUpload} {...dragProps}>\r\n              Click or Drop here\r\n            </button>\r\n            <br/>\r\n            {imageList.map((image, index) => (\r\n              <div key={index} className=\"image-item\">\r\n                <img src={image['data_url']} alt=\"\" width=\"200\" ref={this.myImageRef} />\r\n                <div className=\"image-item__btn-wrapper\">\r\n                  <button class=\"btn btn-primary removeButton\" type=\"button\" onClick={() => onImageRemove(index)}>Remove</button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </ImageUploading>\r\n            </Col>\r\n\r\n\r\n\r\n            <Col  className = \"column\"> Please upload the pro (target) image here\r\n            <ImageUploading\r\n              multiple={false}\r\n              value={this.state.targetImage}\r\n              onChange={this.onChangeTwo}\r\n              dataURLKey=\"data_url\">\r\n            {({imageList, onImageUpload, onImageRemove, isDragging,dragProps,}) => (\r\n            <div className=\"upload__image-wrapper\">\r\n            <button class=\"btn btn-primary mybutton\" type=\"button\" style={isDragging ? { color: 'red' } : undefined} onClick={onImageUpload} {...dragProps}>\r\n              Click or Drop here\r\n            </button>\r\n            <br/>\r\n            {imageList.map((image, index) => (\r\n              <div key={index} className=\"image-item\">\r\n                <img src={image['data_url']} alt=\"\" width=\"200\" ref={this.targetImageRef} />\r\n                <div className=\"image-item__btn-wrapper\">\r\n                  <button class=\"btn btn-primary removeButton\" type=\"button\" onClick={() => onImageRemove(index)}>Remove</button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </ImageUploading>\r\n            </Col>\r\n          </Row>\r\n\r\n          <button type=\"button\" class=\"btn btn-primary btn-lg\" onClick={() => this.onChangeRunButton()}>Compare</button>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\alice\\htn-hobby-finder\\posecheck\\client\\src\\containers\\videoPage.js",["41","42","43","44"],"import React, { Component } from 'react';\r\nimport NavbarComponent from '../components/navbar';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Col, Row } from 'react-grid-system';\r\nimport '../css/start.css';\r\nimport Icon from \"../assets/man.png\";\r\n\r\nconst posenet = require('@tensorflow-models/posenet');\r\n\r\n\r\n\r\nexport default class Video extends Component {\r\n  componentDidMount(){\r\n    window.scrollTo(0,0);\r\n    console.log('Image element: ');\r\n    const imageElement = this.IMG.current;\r\n    console.log(imageElement);\r\n    const pose = this.estimatePoseOnImage(imageElement);\r\n    console.log(pose);\r\n  }\r\n    \r\n  constructor(props) {\r\n    super(props);\r\n    this.estimatePoseOnImage = this.estimatePoseOnImage.bind(this);\r\n    this.IMG = React.createRef();\r\n  }\r\n\r\n  async estimatePoseOnImage(imageElement) {\r\n    // load the posenet model from a checkpoint\r\n    const net = await posenet.load();\r\n    const pose = await net.estimateSinglePose(imageElement, {\r\n      flipHorizontal: false\r\n    });\r\n    return pose;\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <div>\r\n        <NavbarComponent page=\"video\"/>\r\n        <img src={Icon} id='the-img' ref={this.IMG}/>\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\alice\\htn-hobby-finder\\posecheck\\client\\src\\components\\navbar.js",["45","46","47"],"C:\\Users\\alice\\htn-hobby-finder\\posecheck\\client\\src\\components\\pose-estimator.js",["48","49","50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":12},{"ruleId":"55","severity":1,"message":"59","line":6,"column":8,"nodeType":"57","messageId":"58","endLine":6,"endColumn":12},{"ruleId":"55","severity":1,"message":"56","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":12},{"ruleId":"55","severity":1,"message":"60","line":4,"column":10,"nodeType":"57","messageId":"58","endLine":4,"endColumn":13},{"ruleId":"55","severity":1,"message":"61","line":4,"column":15,"nodeType":"57","messageId":"58","endLine":4,"endColumn":18},{"ruleId":"62","severity":1,"message":"63","line":41,"column":9,"nodeType":"64","endLine":41,"endColumn":54},{"ruleId":"55","severity":1,"message":"65","line":4,"column":25,"nodeType":"57","messageId":"58","endLine":4,"endColumn":33},{"ruleId":"55","severity":1,"message":"66","line":4,"column":35,"nodeType":"57","messageId":"58","endLine":4,"endColumn":49},{"ruleId":"67","severity":1,"message":"68","line":11,"column":3,"nodeType":"69","messageId":"70","endLine":13,"endColumn":4},{"ruleId":"55","severity":1,"message":"71","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":13},{"ruleId":"55","severity":1,"message":"72","line":4,"column":5,"nodeType":"57","messageId":"58","endLine":4,"endColumn":19},{"ruleId":"55","severity":1,"message":"73","line":77,"column":11,"nodeType":"57","messageId":"58","endLine":77,"endColumn":16},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'React' is defined but never used.","'flipHorizontal' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]